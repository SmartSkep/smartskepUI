{"version":3,"file":"Handlers-TimeHandler.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAMA,WAAW,gBAAAC,YAAA,CAQpB,SAAAD,YAAA,EAAkD;EAAA,IAAAE,KAAA;EAAA,IAAtCC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAAG,qBAAA,CAAG,IAAI,EAAAC,kBAAA;EAAAC,eAAA,OAAAT,WAAA;EAAAU,0BAAA,OAAAC,KAAA;IAAAC,QAAA;IAAAC,KAAA,EAPrB;MACJC,IAAI,EAAG,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE;IACZ;EAAC;EAAAN,0BAAA,OAAAF,kBAAA;IAAAI,QAAA;IAAAC,KAAA,EACqB;EAAU;EAAAI,eAAA,oBAUpB,YAAI;IACZ,IAAIC,IAAI,GAAG,IAAI;IACf,IAAIC,MAAM,GAAGZ,qBAAA,CAAAL,KAAI,EAAAS,KAAA,EAAOI,MAAM;IAC9B,IAAIK,IAAI,GAAGb,qBAAA,CAAAL,KAAI,EAAAS,KAAA,EAAOG,IAAI;IAC1B,IAAIO,QAAQ,CAACD,IAAI,CAAC,IAAI,EAAE,EAAE;MACtBA,IAAI,GAAGC,QAAQ,CAACD,IAAI,CAAC;IACzB,CAAC,MAAI;MACDA,IAAI,GAAGC,QAAQ,CAACD,IAAI,CAAC,GAAG,EAAE;MAC1BF,IAAI,GAAG,IAAI;IACf;IAEA,IAAGE,IAAI,IAAI,EAAE,EAAC;MACVF,IAAI,GAAG,IAAI;IACf,CAAC,MAAM,IAAGE,IAAI,IAAI,CAAC,EAAC;MAChBA,IAAI,GAAG,EAAE;MACTF,IAAI,GAAG,IAAI;IACf;IAEA,UAAAI,MAAA,CAAUF,IAAI,OAAAE,MAAA,CAAIH,MAAM,OAAAG,MAAA,CAAIJ,IAAI;EACpC,CAAC;EAAAD,eAAA,oBAEW,YAAK;IACb,UAAAK,MAAA,CAAUf,qBAAA,CAAAL,KAAI,EAAAS,KAAA,EAAOG,IAAI,OAAAQ,MAAA,CAAIf,qBAAA,CAAAL,KAAI,EAAAS,KAAA,EAAOI,MAAM;EAClD,CAAC;EA9BG,IAAGZ,UAAU,IAAI,EAAE,EAAEA,UAAU,GAAAI,qBAAA,CAAG,IAAI,EAAAC,kBAAA,CAAmB;EACzD,IAAMe,cAAc,GAAGpB,UAAU,CAACqB,KAAK,CAAC,GAAG,CAAC;EAC5CjB,qBAAA,KAAI,EAAAI,KAAA,EAAOG,IAAI,GAAGS,cAAc,CAAC,CAAC,CAAC;EACnChB,qBAAA,KAAI,EAAAI,KAAA,EAAOI,MAAM,GAAGQ,cAAc,CAAC,CAAC,CAAC,IAAI,IAAI;EAC7ChB,qBAAA,KAAI,EAAAI,KAAA,EAAOK,MAAM,GAAGO,cAAc,CAAC,CAAC,CAAC,IAAI,IAAI;AACjD,CAAC","sources":["webpack://smartskepweb/./assets/js/src/Handlers/TimeHandler.js"],"sourcesContent":["export class TimeHandler{\r\n    #Time = {\r\n        Hour : \"\",\r\n        Minute: \"\",\r\n        Second: \"\",\r\n    }\r\n    #DefaultTimeString  = \"00:00:00\";\r\n\r\n    constructor(timestring = this.#DefaultTimeString ){\r\n        if(timestring == \"\") timestring = this.#DefaultTimeString;\r\n        const splittedString = timestring.split(\":\");\r\n        this.#Time.Hour = splittedString[0];\r\n        this.#Time.Minute = splittedString[1] || \"00\";\r\n        this.#Time.Second = splittedString[2] || \"00\";\r\n    }\r\n\r\n    get12Hour = ()=>{\r\n        let flag = \"AM\";\r\n        let minute = this.#Time.Minute;\r\n        let hour = this.#Time.Hour;\r\n        if((parseInt(hour) <= 12)){\r\n            hour = parseInt(hour);\r\n        }else{\r\n            hour = parseInt(hour) - 12;\r\n            flag = \"PM\";\r\n        }\r\n\r\n        if(hour == 12){\r\n            flag = \"PM\";\r\n        } else if(hour == 0){\r\n            hour = 12;\r\n            flag = \"AM\";\r\n        }\r\n        \r\n        return `${hour}:${minute} ${flag}`;\r\n    }\r\n\r\n    get24Hour = () =>{\r\n        return `${this.#Time.Hour} ${this.#Time.Minute}`;\r\n    }\r\n}"],"names":["TimeHandler","_createClass","_this","timestring","arguments","length","undefined","_classPrivateFieldGet","_DefaultTimeString","_classCallCheck","_classPrivateFieldInitSpec","_Time","writable","value","Hour","Minute","Second","_defineProperty","flag","minute","hour","parseInt","concat","splittedString","split"],"sourceRoot":""}